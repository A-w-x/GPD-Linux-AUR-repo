From bcb9711c486a225bc4fba923c51ecae2604a1a78 Mon Sep 17 00:00:00 2001
From: gituser <nore@nop.np>
Date: Mon, 18 Apr 2022 15:47:44 +0200
Subject: [PATCH 1/7] Revert "anv: don't store sample location sample count"

This reverts commit 8cdd5647c6c3c52a0ff046791d39afb1ad6beac9.
---
 src/intel/vulkan/anv_cmd_buffer.c  |  4 +++-
 src/intel/vulkan/anv_pipeline.c    | 24 +++++++++++++++---------
 src/intel/vulkan/anv_private.h     |  1 +
 src/intel/vulkan/genX_pipeline.c   |  6 +++---
 src/intel/vulkan/gfx7_cmd_buffer.c |  2 +-
 src/intel/vulkan/gfx8_cmd_buffer.c |  2 +-
 6 files changed, 24 insertions(+), 15 deletions(-)

diff --git a/src/intel/vulkan/anv_cmd_buffer.c b/src/intel/vulkan/anv_cmd_buffer.c
index ea62f8bc65e..958c432b720 100644
--- a/src/intel/vulkan/anv_cmd_buffer.c
+++ b/src/intel/vulkan/anv_cmd_buffer.c
@@ -199,9 +199,10 @@ anv_dynamic_state_copy(struct anv_dynamic_state *dest,
    ANV_CMP_COPY(logic_op, ANV_CMD_DIRTY_DYNAMIC_LOGIC_OP);
 
    if (copy_mask & ANV_CMD_DIRTY_DYNAMIC_SAMPLE_LOCATIONS) {
+      dest->sample_locations.samples = src->sample_locations.samples;
       typed_memcpy(dest->sample_locations.locations,
                    src->sample_locations.locations,
-                   ARRAY_SIZE(src->sample_locations.locations));
+                   dest->sample_locations.samples);
       changed |= ANV_CMD_DIRTY_DYNAMIC_SAMPLE_LOCATIONS;
    }
 
@@ -856,6 +857,7 @@ void anv_CmdSetSampleLocationsEXT(
    struct anv_dynamic_state *dyn_state = &cmd_buffer->state.gfx.dynamic;
    uint32_t samples = pSampleLocationsInfo->sampleLocationsPerPixel;
 
+   dyn_state->sample_locations.samples = samples;
    typed_memcpy(dyn_state->sample_locations.locations,
                 pSampleLocationsInfo->pSampleLocations, samples);
 
diff --git a/src/intel/vulkan/anv_pipeline.c b/src/intel/vulkan/anv_pipeline.c
index eb5da15cfff..166dccfe4fa 100644
--- a/src/intel/vulkan/anv_pipeline.c
+++ b/src/intel/vulkan/anv_pipeline.c
@@ -2292,23 +2292,29 @@ copy_non_dynamic_state(struct anv_graphics_pipeline *pipeline,
       const VkPipelineSampleLocationsStateCreateInfoEXT *sl_info = ms_info ?
          vk_find_struct_const(ms_info, PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT) : NULL;
 
-      uint32_t samples = ms_info ? ms_info->rasterizationSamples : 1;
       if (sl_info) {
+         dynamic->sample_locations.samples =
+            sl_info->sampleLocationsInfo.sampleLocationsCount;
          const VkSampleLocationEXT *positions =
             sl_info->sampleLocationsInfo.pSampleLocations;
-         for (uint32_t i = 0; i < samples; i++) {
-            dynamic->sample_locations.locations[i].x = positions[i].x;
-            dynamic->sample_locations.locations[i].y = positions[i].y;
-         }
-      } else {
-         const struct intel_sample_position *positions =
-            intel_get_sample_positions(samples);
-         for (uint32_t i = 0; i < samples; i++) {
+         for (uint32_t i = 0; i < dynamic->sample_locations.samples; i++) {
             dynamic->sample_locations.locations[i].x = positions[i].x;
             dynamic->sample_locations.locations[i].y = positions[i].y;
          }
       }
    }
+   /* Ensure we always have valid values for sample_locations. */
+   if (pipeline->base.device->vk.enabled_extensions.EXT_sample_locations &&
+       dynamic->sample_locations.samples == 0) {
+      dynamic->sample_locations.samples =
+         ms_info ? ms_info->rasterizationSamples : 1;
+      const struct intel_sample_position *positions =
+         intel_get_sample_positions(dynamic->sample_locations.samples);
+      for (uint32_t i = 0; i < dynamic->sample_locations.samples; i++) {
+         dynamic->sample_locations.locations[i].x = positions[i].x;
+         dynamic->sample_locations.locations[i].y = positions[i].y;
+      }
+   }
 
    if (states & ANV_CMD_DIRTY_DYNAMIC_COLOR_BLEND_STATE) {
       if (!raster_discard && uses_color_att) {
diff --git a/src/intel/vulkan/anv_private.h b/src/intel/vulkan/anv_private.h
index caa463f6958..479a8891af2 100644
--- a/src/intel/vulkan/anv_private.h
+++ b/src/intel/vulkan/anv_private.h
@@ -2738,6 +2738,7 @@ struct anv_dynamic_state {
    } line_stipple;
 
    struct {
+      uint32_t                                  samples;
       VkSampleLocationEXT                       locations[MAX_SAMPLE_LOCATIONS];
    } sample_locations;
 
diff --git a/src/intel/vulkan/genX_pipeline.c b/src/intel/vulkan/genX_pipeline.c
index 4d9e0a47573..7ebec74f743 100644
--- a/src/intel/vulkan/genX_pipeline.c
+++ b/src/intel/vulkan/genX_pipeline.c
@@ -925,7 +925,7 @@ emit_ms_state(struct anv_graphics_pipeline *pipeline,
 #if GFX_VER >= 8
    /* On Gfx8+ 3DSTATE_MULTISAMPLE only holds the number of samples. */
    genX(emit_multisample)(&pipeline->base.batch,
-                          pipeline->rasterization_samples,
+                          info ? info->rasterizationSamples : 1,
                           NULL);
 #endif
 
@@ -938,11 +938,11 @@ emit_ms_state(struct anv_graphics_pipeline *pipeline,
        !(dynamic_states & ANV_CMD_DIRTY_DYNAMIC_SAMPLE_LOCATIONS)) {
 #if GFX_VER >= 8
       genX(emit_sample_pattern)(&pipeline->base.batch,
-                                pipeline->rasterization_samples,
+                                pipeline->dynamic_state.sample_locations.samples,
                                 pipeline->dynamic_state.sample_locations.locations);
 #else
       genX(emit_multisample)(&pipeline->base.batch,
-                             pipeline->rasterization_samples,
+                             pipeline->dynamic_state.sample_locations.samples,
                              pipeline->dynamic_state.sample_locations.locations);
 #endif
    }
diff --git a/src/intel/vulkan/gfx7_cmd_buffer.c b/src/intel/vulkan/gfx7_cmd_buffer.c
index 9d9ead4b695..e75dd890f4f 100644
--- a/src/intel/vulkan/gfx7_cmd_buffer.c
+++ b/src/intel/vulkan/gfx7_cmd_buffer.c
@@ -305,7 +305,7 @@ genX(cmd_buffer_flush_dynamic_state)(struct anv_cmd_buffer *cmd_buffer)
    if (anv_cmd_buffer_needs_dynamic_state(cmd_buffer,
                                           ANV_CMD_DIRTY_DYNAMIC_SAMPLE_LOCATIONS)) {
       genX(emit_multisample)(&cmd_buffer->batch,
-                             pipeline->rasterization_samples,
+                             d->sample_locations.samples,
                              d->sample_locations.locations);
    }
 
diff --git a/src/intel/vulkan/gfx8_cmd_buffer.c b/src/intel/vulkan/gfx8_cmd_buffer.c
index b9518fe5db8..63355e17d61 100644
--- a/src/intel/vulkan/gfx8_cmd_buffer.c
+++ b/src/intel/vulkan/gfx8_cmd_buffer.c
@@ -631,7 +631,7 @@ genX(cmd_buffer_flush_dynamic_state)(struct anv_cmd_buffer *cmd_buffer)
    if (anv_cmd_buffer_needs_dynamic_state(cmd_buffer,
                                           ANV_CMD_DIRTY_DYNAMIC_SAMPLE_LOCATIONS)) {
       genX(emit_sample_pattern)(&cmd_buffer->batch,
-                                pipeline->rasterization_samples,
+                                d->sample_locations.samples,
                                 d->sample_locations.locations);
    }
 
-- 
2.35.3

