From 0339b19c0859b63dee0e686451c10d92d6dfbe9b Mon Sep 17 00:00:00 2001
From: auser <nor@nore.com>
Date: Sun, 27 Mar 2022 15:11:01 +0000
Subject: [PATCH 3/7] Revert "anv: use local dynamic pointer more"

This reverts commit 8ad78671b334b1f1798d9aff48abdd543b2348bd.
---
 src/intel/vulkan/gfx7_cmd_buffer.c | 13 ++++++++-----
 src/intel/vulkan/gfx8_cmd_buffer.c |  9 +++++----
 2 files changed, 13 insertions(+), 9 deletions(-)

diff --git a/src/intel/vulkan/gfx7_cmd_buffer.c b/src/intel/vulkan/gfx7_cmd_buffer.c
index e75dd890f4f..cf183429878 100644
--- a/src/intel/vulkan/gfx7_cmd_buffer.c
+++ b/src/intel/vulkan/gfx7_cmd_buffer.c
@@ -136,7 +136,9 @@ genX(cmd_buffer_flush_dynamic_state)(struct anv_cmd_buffer *cmd_buffer)
 
       if (anv_cmd_buffer_needs_dynamic_state(cmd_buffer,
                                              ANV_CMD_DIRTY_DYNAMIC_PRIMITIVE_TOPOLOGY)) {
-         VkPrimitiveTopology primitive_topology = d->primitive_topology;
+         VkPrimitiveTopology primitive_topology =
+            cmd_buffer->state.gfx.dynamic.primitive_topology;
+
          VkPolygonMode dynamic_raster_mode =
             genX(raster_polygon_mode)(cmd_buffer->state.gfx.pipeline,
                                       primitive_topology);
@@ -282,7 +284,8 @@ genX(cmd_buffer_flush_dynamic_state)(struct anv_cmd_buffer *cmd_buffer)
                                           ANV_CMD_DIRTY_DYNAMIC_COLOR_BLEND_STATE |
                                           ANV_CMD_DIRTY_DYNAMIC_PRIMITIVE_TOPOLOGY)) {
       VkPolygonMode dynamic_raster_mode;
-      VkPrimitiveTopology primitive_topology = d->primitive_topology;
+      VkPrimitiveTopology primitive_topology =
+         cmd_buffer->state.gfx.dynamic.primitive_topology;
       dynamic_raster_mode =
          genX(raster_polygon_mode)(cmd_buffer->state.gfx.pipeline,
                                    primitive_topology);
@@ -305,14 +308,14 @@ genX(cmd_buffer_flush_dynamic_state)(struct anv_cmd_buffer *cmd_buffer)
    if (anv_cmd_buffer_needs_dynamic_state(cmd_buffer,
                                           ANV_CMD_DIRTY_DYNAMIC_SAMPLE_LOCATIONS)) {
       genX(emit_multisample)(&cmd_buffer->batch,
-                             d->sample_locations.samples,
-                             d->sample_locations.locations);
+                             cmd_buffer->state.gfx.dynamic.sample_locations.samples,
+                             cmd_buffer->state.gfx.dynamic.sample_locations.locations);
    }
 
    if (anv_cmd_buffer_needs_dynamic_state(cmd_buffer,
                                           ANV_CMD_DIRTY_DYNAMIC_COLOR_BLEND_STATE |
                                           ANV_CMD_DIRTY_DYNAMIC_LOGIC_OP)) {
-      const uint8_t color_writes = d->color_writes;
+      const uint8_t color_writes = cmd_buffer->state.gfx.dynamic.color_writes;
 
       uint32_t blend_dws[GENX(BLEND_STATE_length) +
                          MAX_RTS * GENX(BLEND_STATE_ENTRY_length)];
diff --git a/src/intel/vulkan/gfx8_cmd_buffer.c b/src/intel/vulkan/gfx8_cmd_buffer.c
index 623cdd4bcfa..8f30e1253a2 100644
--- a/src/intel/vulkan/gfx8_cmd_buffer.c
+++ b/src/intel/vulkan/gfx8_cmd_buffer.c
@@ -325,7 +325,8 @@ genX(cmd_buffer_flush_dynamic_state)(struct anv_cmd_buffer *cmd_buffer)
 #if GFX_VER >= 11
    if (anv_cmd_buffer_needs_dynamic_state(cmd_buffer,
                                           ANV_CMD_DIRTY_DYNAMIC_SHADING_RATE)) {
-      genX(emit_shading_rate)(&cmd_buffer->batch, pipeline, d);
+      genX(emit_shading_rate)(&cmd_buffer->batch, pipeline,
+                              &cmd_buffer->state.gfx.dynamic);
    }
 #endif /* GFX_VER >= 11 */
 
@@ -633,14 +634,14 @@ genX(cmd_buffer_flush_dynamic_state)(struct anv_cmd_buffer *cmd_buffer)
    if (anv_cmd_buffer_needs_dynamic_state(cmd_buffer,
                                           ANV_CMD_DIRTY_DYNAMIC_SAMPLE_LOCATIONS)) {
       genX(emit_sample_pattern)(&cmd_buffer->batch,
-                                d->sample_locations.samples,
-                                d->sample_locations.locations);
+                                cmd_buffer->state.gfx.dynamic.sample_locations.samples,
+                                cmd_buffer->state.gfx.dynamic.sample_locations.locations);
    }
 
    if (anv_cmd_buffer_needs_dynamic_state(cmd_buffer,
                                           ANV_CMD_DIRTY_DYNAMIC_COLOR_BLEND_STATE |
                                           ANV_CMD_DIRTY_DYNAMIC_LOGIC_OP)) {
-      const uint8_t color_writes = d->color_writes;
+      const uint8_t color_writes = cmd_buffer->state.gfx.dynamic.color_writes;
       /* 3DSTATE_WM in the hope we can avoid spawning fragment shaders
        * threads.
        */
-- 
2.35.1

